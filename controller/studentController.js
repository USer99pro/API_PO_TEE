const Student = require('../models/studentModel');

// ‡πÅ‡∏™‡∏î‡∏á‡∏ô‡∏±‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
exports.showAllStudents = async (req, res, next) => {
    try {
        console.log("üì• GET: /students - ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡∏î‡∏π‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ô‡∏±‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î");
        const result = await Student.find();
        res.json({ studentData: result });
    } catch (error) {
        console.error("‚ùå ERROR in showAllStudents:", error.message);
        res.status(500).json({ message: "‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•", error: error.message });
    }
};

// ‡πÅ‡∏™‡∏î‡∏á‡∏ô‡∏±‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏≤‡∏¢‡∏ö‡∏∏‡∏Ñ‡∏Ñ‡∏•‡∏ï‡∏≤‡∏° id
exports.showStudentsByID = async (req, res, next) => {
    try {
        const { id } = req.params;
        console.log(`üì• GET: /students/${id} - ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏ô‡∏±‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏î‡πâ‡∏ß‡∏¢ ID`);
        const std = await Student.findById(id);
        if (!std) {
            return res.status(404).json({ message: "‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ô‡∏±‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏≤‡∏¢‡∏ô‡∏µ‡πâ" });
        }
        res.json({ data: std });
    } catch (error) {
        console.error("‚ùå ERROR in showStudentsByID:", error.message);
        res.status(500).json({ message: "‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î", error: error.message });
    }
};

// ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ô‡∏±‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡πÉ‡∏´‡∏°‡πà
exports.InsertStudent = async (req, res, next) => {
    try {
        const { name, age, sex, email } = req.body;
        console.log("üì• POST: /students - ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ô‡∏±‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡πÉ‡∏´‡∏°‡πà", req.body);

        const exitemail = await Student.findOne({ email: email });

        if (exitemail) {
            return res.status(400).json({ message: "Email already exists" });
        }

        const std = new Student({
            name,
            age,
            sex,
            email
        });

        await std.save();

        console.log("‚úÖ ‡∏ô‡∏±‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏ñ‡∏π‡∏Å‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å:", std);

        res.json({ message: "Student added successfully", student: std });

    } catch (error) {
        console.error("‚ùå ERROR in InsertStudent:", error.message);
        res.status(500).json({ message: "‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•", error: error.message });
    }
};

// ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ô‡∏±‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ô
exports.updateStudent = async (req, res, next) => {
    try {
        const { id } = req.params;
        const { name, age, sex, email } = req.body;
        console.log(`üì• PUT: /students/${id} - ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•`, req.body);

        const std = await Student.findById(id);

        if (!std) {
            return res.status(404).json({ message: "‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ô‡∏±‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏≤‡∏¢‡∏ô‡∏µ‡πâ" });
        }

        if (name) std.name = name;
        if (age) std.age = age;
        if (sex) std.sex = sex;
        if (email) std.email = email;

        await std.save();

        console.log("‚úÖ ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ô‡∏±‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏´‡∏•‡∏±‡∏á‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï:", std);

        res.json({ message: "‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ô‡∏±‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à", student: std });

    } catch (error) {
        console.error("‚ùå ERROR in updateStudent:", error.message);
        res.status(500).json({ message: "‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï", error: error.message });
    }
};

// ‡∏•‡∏ö‡∏ô‡∏±‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ô
exports.deleteStudent = async (req, res, next) => {
    try {
        const { id } = req.params;
        console.log(`üì• DELETE: /students/${id} - ‡∏•‡∏ö‡∏ô‡∏±‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ô`);

        const result = await Student.deleteOne({ _id: id });

        if (result.deletedCount === 0) {
            throw new Error(`‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ç‡∏≠‡∏á‡πÑ‡∏≠‡∏î‡∏µ ${id}`);
        }

        console.log("‚úÖ ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ô‡∏±‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢");

        res.json({ message: "‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢" });

    } catch (error) {
        console.error("‚ùå ERROR in deleteStudent:", error.message);
        res.status(400).json({ message: "‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏î‡πâ", error: error.message });
    }
};
